.crumb {
    background-color: #f2f2f2;
    padding: 7px;
    border-radius: 4px;
    margin-bottom: 15px;

    .breadcrumb {
        margin: 0;

        li {
            &:last-child {
                &::before {
                    content: ">";
                }
            }
        }
    }
}
.note{
    border: 1px #979797 dashed;
    border-radius: 4px;
    padding: 10px;
    p{
        margin-bottom: 0;
    }
}

.form-group{
    position: relative;
    .form-control{
        max-width: 90%;
    }
    .help{
        position: absolute;
        left: 90%;
        top: 50%;
        cursor: pointer;
        margin-left: 5px;
    }
}

.form-footer{
    margin-top: 30px;
}
.btn_back{
    border: 1px solid #DDDDDD;
    padding: 0 20px;
    border-radius: 16px;
    height: 34px;
    line-height: 34px;
    background-color: #FFF;
    &:hover{
        background-color: #f3f5f7;
    }
    .string{
        padding-right: 5px;
    }
    .icon_back{
        position: relative;
        top: -1px;
        padding-right: 5px;
    }
}

.margin-left15{
    margin-left: 15px;
}

.btn_save{
    border: 1px solid #383434;
    padding: 0 20px;
    border-radius: 16px;
    height: 34px;
    line-height: 34px;
    background-color: #383434;
    color: #FFF;
    &:hover{
        background-color: rgb(30, 30, 30);
    }
    .string{
        padding-right: 5px;
    }
    .icon_save{
        position: relative;
        top: -1px;
        padding-right: 5px;
    }
}


.btn_skip{
    border: 1px solid #383434;
    padding: 0 20px;
    border-radius: 16px;
    height: 34px;
    line-height: 34px;
    background-color: #FFF;
    &:hover{
        background-color: #f3f5f7;
    }
    .string{
        padding-right: 5px;
    }
    .icon_save{
        position: relative;
        top: -1px;
        padding-right: 5px;
    }
}
.form_dropdown{
    max-width: 50%;
}


/* Remove default checkbox */
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
  position: absolute;
  left: -9999px;
  opacity: 0;
}

[type="checkbox"] {
  /* checkbox aspect */
}

[type="checkbox"] + label {
  position: relative;
  padding-left: 30px;
  cursor: pointer;
  display: inline-block;
  height: 25px;
  font-size: 1rem;
  -webkit-user-select: none;
  /* webkit (safari, chrome) browsers */
  -moz-user-select: none;
  /* mozilla browsers */
  -khtml-user-select: none;
  /* webkit (konqueror) browsers */
  -ms-user-select: none;
  /* IE10+ */
}

[type="checkbox"] + label:before,
[type="checkbox"]:not(.filled-in) + label:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 18px;
  height: 18px;
  z-index: 0;
  border: 1px solid #5a5a5a;
  border-radius: 1px;
  margin-top: 2px;
  transition: .2s;
}

[type="checkbox"]:not(.filled-in) + label:after {
  border: 0;
  -webkit-transform: scale(0);
          transform: scale(0);
}

[type="checkbox"]:not(:checked):disabled + label:before {
  border: none;
  background-color: rgba(0, 0, 0, 0.26);
}

[type="checkbox"].tabbed:focus + label:after {
  -webkit-transform: scale(1);
          transform: scale(1);
  border: 0;
  border-radius: 50%;
  box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);
  background-color: rgba(0, 0, 0, 0.1);
}

[type="checkbox"]:checked + label:before {
  top: -4px;
  left: -5px;
  width: 12px;
  height: 22px;
  border-top: 2px solid transparent;
  border-left: 2px solid transparent;
  border-right: 2px solid #373434;
  border-bottom: 2px solid #373434;
  -webkit-transform: rotate(40deg);
          transform: rotate(40deg);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}

[type="checkbox"]:checked:disabled + label:before {
  border-right: 2px solid rgba(0, 0, 0, 0.26);
  border-bottom: 2px solid rgba(0, 0, 0, 0.26);
}

/* Indeterminate checkbox */
[type="checkbox"]:indeterminate + label:before {
  top: -11px;
  left: -12px;
  width: 10px;
  height: 22px;
  border-top: none;
  border-left: none;
  border-right: 2px solid #373434;
  border-bottom: none;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}

[type="checkbox"]:indeterminate:disabled + label:before {
  border-right: 2px solid rgba(0, 0, 0, 0.26);
  background-color: transparent;
}

[type="checkbox"].filled-in + label:after {
  border-radius: 2px;
}

[type="checkbox"].filled-in + label:before,
[type="checkbox"].filled-in + label:after {
  content: '';
  left: 0;
  position: absolute;
  /* .1s delay is for check animation */
  transition: border .25s, background-color .25s, width .20s .1s, height .20s .1s, top .20s .1s, left .20s .1s;
  z-index: 1;
}

[type="checkbox"].filled-in:not(:checked) + label:before {
  width: 0;
  height: 0;
  border: 3px solid transparent;
  left: 6px;
  top: 10px;
  -webkit-transform: rotateZ(37deg);
  transform: rotateZ(37deg);
  -webkit-transform-origin: 20% 40%;
  transform-origin: 100% 100%;
}

[type="checkbox"].filled-in:not(:checked) + label:after {
  height: 20px;
  width: 20px;
  background-color: transparent;
  border: 1px solid #5a5a5a;
  top: 2px;
  z-index: 0;
}

[type="checkbox"].filled-in:checked + label:before {
  top: 2px;
  left: 1px;
  width: 8px;
  height: 13px;
  border-top: 2px solid transparent;
  border-left: 2px solid transparent;
  border-right: 2px solid #fff;
  border-bottom: 2px solid #fff;
  -webkit-transform: rotateZ(37deg);
  transform: rotateZ(37deg);
  -webkit-transform-origin: 100% 100%;
  transform-origin: 100% 100%;
}

[type="checkbox"].filled-in:checked + label:after {
  top: 2px;
  width: 20px;
  height: 20px;
  border: 1px solid #373434;
  background-color: #373434;
  z-index: 0;
}

[type="checkbox"].filled-in.tabbed:focus + label:after {
  border-radius: 2px;
  border-color: #5a5a5a;
  background-color: rgba(0, 0, 0, 0.1);
}

[type="checkbox"].filled-in.tabbed:checked:focus + label:after {
  border-radius: 2px;
  background-color: #373434;
  border-color: #373434;
}

[type="checkbox"].filled-in:disabled:not(:checked) + label:before {
  background-color: transparent;
  border: 2px solid transparent;
}

[type="checkbox"].filled-in:disabled:not(:checked) + label:after {
  border-color: transparent;
  background-color: #BDBDBD;
}

[type="checkbox"].filled-in:disabled:checked + label:before {
  background-color: transparent;
}

[type="checkbox"].filled-in:disabled:checked + label:after {
  background-color: #BDBDBD;
  border-color: #BDBDBD;
}



/* Switch
   ========================================================================== */
//    .switch,
//    .switch * {
//      -webkit-user-select: none;
//      -moz-user-select: none;
//      -khtml-user-select: none;
//      -ms-user-select: none;
//    }
   
//    .switch label {
//      cursor: pointer;
//    }
   
//    .switch label input[type=checkbox] {
//      opacity: 0;
//      width: 0;
//      height: 0;
//    }
   
//    .switch label 
   
//    .switch label input[type=checkbox]:checked + .lever:after {
//      background-color: #26a69a;
//      left: 24px;
//    }
   
//    .switch label .lever {
//      content: "";
//      display: inline-block;
//      position: relative;
//      width: 40px;
//      height: 15px;
//      background-color: #A5A5A5;
//      border-radius: 15px;
//      margin-right: 10px;
//      transition: background 0.3s ease;
//      vertical-align: middle;
//      margin: 0 16px;
//    }
   
//    .switch label .lever:after {
//      content: "";
//      position: absolute;
//      display: inline-block;
//      width: 21px;
//      height: 21px;
//      background-color: #F1F1F1;
//      border-radius: 21px;
//      box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4);
//      left: -5px;
//      top: -3px;
//      transition: left 0.3s ease, background .3s ease, box-shadow 0.1s ease;
//    }
   
   
   
   

.checkmark {
    position: relative;

    input[type=checkbox]:checked:not(:disabled) ~ .lever:active::after,
    input[type=checkbox]:checked:not(:disabled).tabbed:focus ~ .lever::after {
        box-shadow: none;
    }
    
    input[type=checkbox]:not(:disabled) ~ .lever:active:after,
    input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::after {
        box-shadow:none
    }
    
    input[type=checkbox][disabled] + .lever:after,
    input[type=checkbox][disabled]:checked + .lever:after {
        background-color: #BDBDBD;
    }
    
    input.chk-default:not(:checked),
    input.chk-default:checked {
        position: unset !important;
        opacity: 1 !important;
        
    }
    
    .switch input[type=checkbox][disabled] + .lever {
        cursor: default;
    }
    
    .switch * ,
    .switch {
        -webkit-user-select: none;
        -moz-user-select: none;
        -khtml-user-select: none;
        -ms-user-select: none;
        label {
            margin-bottom: 0;
            cursor: pointer;
  
            input[type=checkbox] {
                display: none;
                opacity: 0;
                width: 0;
                height: 0;
            }

            input[type=checkbox]:checked + .lever {
                background-color: #84c7c1;
            }
  
            input[type=checkbox]:checked + .lever:after {
                background-color: #26a69a;
                left: 24px;
            }
            // input[type=checkbox] {
                
            // }
            .lever {
                width: 32px;
                height: 16px;
                margin: 0;
                content: "";
                display: inline-block;
                position: relative;
                background-color: #A5A5A5;
                border-radius: 15px;
                margin-right: 10px;
                transition: background 0.3s ease;
                vertical-align: middle;
                position: absolute;
                top: 3px;
  
                &::after {
                    width: 12px;
                    height: 12px;
                    left: 2px;
                    top: 2px;
                    background: #FFF;
                    content: "";
                    position: absolute;
                    display: inline-block;
                    background-color: #F1F1F1;
                    border-radius: 20px;
                    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4);
                    transition: left 0.3s ease, background .3s ease, box-shadow 0.1s ease;
                }
            }
  
            input[type=checkbox]:checked+.lever.switch-col-darkblue:after {
                background: #fff;
                left: 16px;
            }
  
            input[type=checkbox]:checked+.lever.switch-col-darkblue {
                background: #373434;
            }
            .control-var{
                padding-left: 40px;
                display: inline-block;
                font-style: normal;
            }
        }
    }
  }

  .radio_box{
    display: inline-block;
    position: relative;
    padding-left: 25px;
    margin-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    margin-right: 10px;
    label{
      cursor: pointer;
    }
    input{
      position: absolute;
      opacity: 0;
      cursor: pointer;
      height: 0;
      width: 0;
    }
    .lever{
      position: absolute;
      top: 2px;
      left: 0;
      height: 16px;
      width: 16px;
      background-color: #D9D9D9;
      border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    &:hover input ~ .lever {
      background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    input:checked ~ .lever {
      background-color: #D9D9D9;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .lever:after {
      content: "";
      position: absolute;
      display: none;
    }

    /* Show the checkmark when checked */
    input:checked ~ .lever:after {
      display: block;
    }

    /* Style the checkmark/indicator */
    .lever:after {
      top: 4px;
      left: 4px;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: var(--bg-color-dark);
    }

  }
  .input-error{
    border-color: red !important;
  }
